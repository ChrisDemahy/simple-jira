

enum IssueStatus {
  // Issue is at the service desk
  CREATED
  OPEN
  // Issue is at primary support level
  PENDINGSUPPORT
  INPROGRESS
  // When an issue is resolved the reporter gets 5 days
  //    to reply by email to reopen the ticket or the ticket
  //    can be repopened manually
  RESOLVED
  CLOSED
}

enum IssuePriority {
  LOW
  MINOR
  MAJOR
  BLOCKING
}

// TODO Make this dynamic by the project
enum IssueType {
  // Issue is with service desk
  EMAILREQUEST
  PHONEREQUEST
  // Issue is with primary support team
  SERVICEREQUEST
  INCIDENT
}

// Issues are like tickets in most ticket systems (Jira is a project management system)
model Issue {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Brief summary (~10 words)
  summary     String
  // Longer description of the issue the user is reporting
  description String?

  // Enums
  // Status of the issue
  status   IssueStatus   @default(CREATED)
  // Whether the ticket is a service desk ticket or service request or incident
  type     IssueType     @default(EMAILREQUEST)
  // The priority of the ticket
  priority IssuePriority @default(MINOR)

  // IT4IT is to indicate that the ticket is for other IT
  //    users so people can priority fellow employees
  it4it Boolean @default(false)

  // Users
  // Issues are reported (created) by users
  reporter   User   @relation("IssueReporters", fields: [reporterId], references: [id])
  reporterId String

  // Request Participants
  participants User[] @relation("IssueParticipants")
  // User assigned the ticekt
  assignee     User?  @relation("AssignedUser", fields: [assigneeId], references: [id])
  assigneeId   String

  watchers User[] @relation("WatchingUsers")


  // Project

  // comments by users regarding the ticket
  comments  Comment[]

  // Users watching the issue
}

// Alias Models
  model Comment {
    id String @id @unique @default(uuid())
      // Comments belong to an issue
  issue     Issue    @relation(fields: [issueId], references: [id])
  issueId   String
  }
  model Project {
    id String @id @unique @default(uuid())
    // A project has issues that track work done on the project
    issues Issue[]
  }
    model User {
    id String @id @unique @default(uuid())
    // Issues the user has preported
    reporterIssues    Issue[]   @relation("IssueReporters")
    // Issues the user is a participant (commented)
    participantIssues Issue[]   @relation("IssueParticipants")
    // Issues a user is assigned to 
    Issue             Issue[]   @relation("AssignedUser")
  // Issues a user is watching 
    watchedIssues     Issue[] @relation("WatchingUsers")
  }